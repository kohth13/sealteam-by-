rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin or instructor
    function isAdminOrInstructor() {
      return isAuthenticated() && 
             (request.auth.token.email == 'admin@example.com' || 
              request.auth.token.email == 'instructor@example.com');
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Enrollments collection rules
    match /artifacts/{appId}/public/data/enrollments/{enrollmentId} {
      // Anyone can create an enrollment (for registration)
      allow create: if true;
      
      // Admin and instructors can read all enrollments
      allow read: if isAdminOrInstructor();
      
      // Students can read their own enrollments
      allow read: if isAuthenticated() && 
                     resource.data.registeredBy == request.auth.uid;
      
      // Only admin and instructors can update enrollments
      allow update: if isAdminOrInstructor();
      
      // Only admin can delete enrollments
      allow delete: if isAdminOrInstructor();
    }
    
    // Users collection (for storing user roles - optional)
    match /artifacts/{appId}/public/data/users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isAdminOrInstructor();
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
